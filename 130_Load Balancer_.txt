Okay, next up,
let's talk about load balancers.
So a load balancer dynamically balances the load
between device, as the name implies.
So load balancers can be an appliance,
it can be a physical device,
or it could be a virtual server
and again, it could be hardware or software based.
So in this example, we have an external network,
we have an internal network,
and of course we have our servers inside of our network
and in this case, we have load balancers
sitting in front of a database
or a group of database servers.
So let's say for this example, we have a number of folks
that are sitting outside of our network
and they're trying to get access to a web server
and there's a database sitting back there,
but without a load balancer, all of those folks
would potentially be hitting one server all at once.
So the load balancer allows us to take the incoming traffic
and at any point in time identify
what is the best server to send that to,
whether it be the least busy,
it'll use some algorithm
to figure out what's the best server
or it may just do round robin,
where it goes, server one, server two,
server three, and so forth.
But in this example, it's identifying a specific path
to get us to the database server.
So as I mentioned,
a load balancer helps balance the load between servers.
So here we have load balancer one and load balancer two.
so we can do something called scheduling
and there's two different ways of doing that.
We have affinity and we have round robin.
So load balancer affinity,
sometimes referred to as session affinity
or a sticky session,
it's basically a concept of load balancing
or a load balancer routes incoming network traffic
from a particular client or user to the same backend server
for the entirety of that client's session.
So it basically does this to maintain continuity,
to reduce session disruptions,
certain applications are very sensitive
to fluctuations and connectivity,
so in this regard, it's a benefit.
There are some drawbacks to affinity
if it's not set up properly,
uneven server resource utilization,
one client's session could monopolize that server.
So load balancer affinity is definitely a valid use case,
but it should be used sparingly
for its very specific applications.
Round robin just basically says load balancer one,
then two, then one, then two, back and forth.
If we had five,
it would go one, two, three, four, five and back again.
We can also have active-passive,
where basically one load balancer is handling all the load
and if it were to fail,
then it would fail over to load balancer two.
So the second load balancer basically sits there passively
until a certain level of load is reached
where the primary load balancer fails.
And then we also have active-active,
and that's where the load is shared
amongst however many load balancers are in that cluster.
And basically what I want you to understand
is the concept of a virtual IP or internet protocol address.
So if we have load balancer one
and load balancer two in this example,
our clients don't necessarily need to know
the IP address of each.
We could have five, 10, 15 servers sitting in that cluster,
but there's only one virtual IP, or a VIP,
that's presented to clients.
They connect to that one IP address
and then from there,
they'll connect to any of the load balancers
associated with that IP address.
So in essence, a load balancer is a device
that will spread the incoming load
among multiple pieces of infrastructure
and that could be servers, it could be storage,
it could be network, load balancers could be sitting
in front of any of those things
and it can also provide additional services as well.
So in this example, we have some external users,
we have some internal users,
obviously they're gonna access through the internet
and then we have behind our firewall,
we have load balancers, web servers,
database servers, and storage.
So the external users
would actually come through the internet,
they would hit our firewall,
the firewall will then forward those requests
to the load balancers
using whatever method they're configured to use,
whether it's affinity, round Robin, and so forth,
they will spread that load across the various web servers
and then of course, access database storage and so forth.
So that way, no matter how many users
are accessing our resources,
whether they're external or internal users,
the load balancers will spread that load
across our resources to make sure that no one server
or no one piece of infrastructure gets overwhelmed.