Hey, welcome back, everybody.
I'm your instructor, Christopher Rees,
and in this course Security Operations,
we'll be covering specifically in this module,
applying common security techniques to computing resources.
So let's go ahead and take a look
at what we'll cover in this module.
At a high level, we're talking about secure baselines,
we're talking about hardening targets, wireless devices,
mobile solutions, wireless security settings,
application security, sandboxing, and then monitoring.
And as always,
we'll take a peek behind the curtain to see
what we'll be covering in more detail.
So I won't read through everything.
Just notice that I've highlighted some things in pink,
and those are things that we've covered in other modules.
So we won't dig into those two deep, if at all,
simply because they're covered elsewhere.
But anyway, go ahead and pause this
for a second if you wanna read through.
And then when you're ready,
let's go ahead and get started.
Let's talk about why this is actually important.
So obviously security operations encompasses
a number of different disciplines.
It could be network security, application security,
it can be forensics, incident response,
a number of different disciplines
all rolled up under the umbrella,
and I'm using air quotes,
of cybersecurity or security operations.
Well, the goal of really all of these things
is to ensure that our business is secure.
So to put it really into a nutshell,
the main goals of a security professional
are to secure your organization's data
and keep the business running.
And that's done through a number of different things.
As I mentioned, it can be data protection,
to make sure those things are set up properly,
data is protected, it's backed up and tested for recovery.
Compliance and legal requirements,
to make sure we're doing what we're supposed to be doing.
Depending upon your industry,
compliance can be very rigid with your organization,
potentially being audited from time to time.
Also, intellectual property and competitive edge.
By keeping things secure, keeping the crown jewels,
if you will, away from prying eyes,
away from competitors, espionage, and so forth,
that intellectual property can sometimes make the difference
between making or breaking a company.
Also business continuity, and then customer trust.
So as we go through the elements in this course,
and this one is actually the biggest
out of the five domains,
so it's important that you pay attention
to everything in here.
Understand that the main goals
are to keep the business online,
data secure, customers happy,
investors happy, all that good stuff.
So let's dive in and talk about how we actually do that.
Okay, first and foremost,
let's talk about secure baselines.
So as mentioned before,
a baseline is the ground level
of where we need things to be.
So it is the standard that we measure things by.
By having baselines in place,
whether it's for infrastructure,
for applications, for networking,
for different types of security controls,
understanding what's normal allows us
to quickly understand and identify what's not normal.
It also allows us to periodically pull things back
into compliance very quickly.
So when it comes to secure baselines,
we have three things we basically want to do.
We want to establish, deploy, and maintain.
So when it comes to establishing baselines,
three tools that I will call to your attention,
CIS-CAT, SCAP, and Microsoft Security Compliance Toolkit.
I'll put details about those in the actual slide deck
so that you can read more about them
and understand what they do.
But for now, just understand
that their tools used to establish baselines.
Once we have those baselines established,
we then deploy those baselines,
and that can be used with things
like Ansible, Puppet, and Chef.
Again, three different tools,
not an endorsement over one over the other.
Just giving you some examples.
And then maintaining.
So automation, version control,
and also template reusability allows us
to maintain those things across the enterprise.
So when it comes to baseline configuration and management,
why do we do that?
Well, standardization and consistency.
We wanna make sure we ensure a common set
of security controls across the organization,
making it easier to manage and monitor,
reducing configuration errors,
and also potential vulnerabilities.
Because again, the more we automate,
the less we take the human factor out of it.
We reduce risk, we reduce manual errors, and so forth.
Also provides streamlined compliance and auditing.
So it simplifies that process
by having a clear set of criteria
to demonstrate adherence to required security controls.
Again, depending upon your industry,
compliance can be very, very rigid
and very, very costly if you don't comply.
And then proactive risk management.
So reducing an organization's attack surface
and ensures security controls
are consistent throughout the environment.
So as you might be aware, if you spend any time in IT,
especially in a large or enterprise environment,
having things not standardized
and not configured is a recipe for disaster.
Because if everyone does something differently,
it becomes a nightmare to try to monitor and maintain.
And if and when a crisis does occur
and you need to shut things down
or make sure things are locked down very quickly,
it becomes almost impossible
if everything is configured differently.
So as an example tool set,
all right, here we have three different types of teams,
administrators, maybe a test and the QA team,
and then also a security team.
Well, they can use tools.
In this instance we'll use like Puppet,
Chef, or Ansible as an example.
Again, there are many ways to do this,
but let's just say in general terms,
we're using a configuration server.
What we can do is push out policies
as we create our systems.
So we can create, provision, push, configure.
Security services are then applied and then deploy.
So this is referring to containers,
but it could also refer to bare metal servers.
So we have our instances, we have our servers.
The OS image then gets laid on top of the server.
That server's then configured or built to intent.
And again, we're configuring it based upon our baselines.
Security services might then push out another set
of criteria to make it an approved server.
It's then an operating server
that gets deployed into the environment.
So now we have a pool of ready or running servers.
Now, over time,
some of those servers might start to drift away.
They might start to become basically out of compliance.
So we can use those same configuration tools
and then reapply those baselines back to those servers,
which brings them back into compliance.