Now, the reason I bring all those things up,
just to give you an idea
of some of the tasks that are involved,
and now we talk about resource provisioning
from an automated perspective.
So IT resources,
whether it be servers, storage, or networking,
automation can be leveraged
to provision virtual or bare metal servers,
cloud resources at capacity, shrink capacity, and so forth.
So via automation, those resources can be created
and also destroyed on demand
to ensure proper resource utilization,
and again, popular tools for that one would be Terraform
and also AWS CloudFormation.
And again, there are many other tools out there,
so everyone has their own favorite, their own flavor.
Some people use scripts, some people use actual platforms.
There's no real right or wrong answer.
It basically boils down to
whatever works in your environment.
Automation also allows us to really leverage
the benefits of elasticity and scalability.
So the ability to grow and reduce on demand,
that reduces risk.
Number one, strain the capital.
We don't have machines and resources sitting out there
that we bought that we're not using,
basically investing more than is necessary.
And you may say to yourself, "Well, why would you do that?
Doesn't make any sense."
Well, in case you're not familiar, let's say once a year,
we'll use the Super Bowl commercial as an example, right?
Just an example.
You run a commercial.
All of a sudden,
you now have a thousand X the number of people
coming into your website
or coming into your store buying things
than you normally would.
Well, you have to buy infrastructure to accommodate that,
and if you don't have elasticity and scalability,
you have to basically buy that
and have it sit there idle for the entire year
so that it's available when the peak time hits.
The rest of the year, it's not really being utilized.
Well, by having elasticity and scalability built in,
automation helps with that,
you can basically have a bare minimum set of resources
to accommodate demand throughout the year,
and then just before you know a spike's gonna occur,
you can burst out, you can elastically scale,
add more resources to accommodate all the demand,
obviously process that demand, and then when it's done,
you can shrink back down again.
So it allows you to be very specific
in the amount of resources that you use,
and of course, it saves money.
The reverse of that is if you buy just what you need today
and you can't scale, then when that peak hits,
you don't have enough to scale when needed.
Another example of that might be to instantiate
additional security or cloud monitoring
or also DDoS protection.
So it's not just to process orders or to service demand.
It can also be from a security perspective
to spin up additional resources.
If you have some type of massive DDoS attack occurring,
you could bring on more resources as required.