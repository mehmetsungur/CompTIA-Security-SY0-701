So when it comes to access controls,
let's talk about a few key concepts.
We have mandatory access control.
So MAC is a high level security model
where access decisions are based on security labels
and predefined rules.
So we talked briefly about this when we're talking about
Secure Linux and Secure Android.
Mandatory access controls play a big part
in those systems as well.
So users and data are assigned security labels.
So access is granted based on label matching
and predefined rules, often with no user discretion,
which is much different than we typically see
with discretionary access controls,
which we'll talk about next.
So with mandatory, it's a predefined set of permissions.
There's no wiggle room there.
So if you're in a group or an entity where
that label matches that set of permissions,
then that's what you get.
No more, no less.
When it comes to discretionary access control,
DAC is more flexible than mandatory access control,
and it allows data owners to determine
who can access the resources.
So it's up to the actual owner of the data
to assign permissions, and they can grant permissions
and revoke permissions as needed.
So as I said, access decisions are at the
discretion of the resource owner.
So again, these are commonly used in
everyday computing environments.
It's very common with file systems
where the users will actually control access to their files.
And then we have role-based access control, or RBAC.
So RBAC assigns permissions based upon user roles
within an organization.
So users are placed in the roles,
and the roles are associated with specific permissions.
This simplifies access management
by granting access based on job responsibilities,
making it easier to manage access at scale.
So as I mentioned before, rather than assigning permissions
to a specific user, it's better to assign it to groups.
So that way, if someone moves from finance to accounting
or finance to the graphic design department
or wherever they might go.
People are leaving finance for some reason.
Well, if they move from one to the other,
as soon as they move those roles,
you basically take them out of one group,
put them into another.
The permissions are automatically removed from the one group
and automatically added or granted
to them once they join the new group.
So it makes it very, very easy.
Otherwise, you run the risk
of people having too many permissions,
especially if they've been at a company for a number
of years and have moved jobs a number of times.
They may accumulate permissions,
many of which they probably don't need or don't require.
Similarly, we also have rule-based access control,
and this is also sometimes referred to
as RBAC, so it's a bit confusing,
but just to understand the nuances.
So rule-based access control uses predefined rules
and policies to determine access.
So access decisions are based on conditions
or rules defined by administrators.
So rather than permissions being assigned to groups,
these access decisions are basically based upon conditions.
So this approach allows
for more fine grained control than simple RBAC
and can adapt to dynamic conditions.
And then we have something referred
to as attribute based access control or ABAC.
So ABAC is a dynamic access control model
where access decisions are based on multiple attributes
or characteristics of users, resources, and the environment.
Let's say we have a resource that has permissions assigned.
So it can come from a number of different things.
So for instance, it may be user attributes based upon
a role or a department.
It could be resource attributes,
depending upon sensitivity level of that specific resource.
And it could also be environmental attributes like time
of day, location, and so forth.
So as you can see, those permissions will be dynamically
generated based upon a combination of things.
They may have access to something during the day,
but not necessarily after hours
or if they're in a different part of the country,
or if they're accessing it from a different
network or different device.
So it just depends.