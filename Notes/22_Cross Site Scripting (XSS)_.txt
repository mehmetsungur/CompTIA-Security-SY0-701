Okay, next, let's look at
cross-site scripting or XSS.
And these are techniques
that can be used to hijack sessions.
So they can be non-persistent,
come in things like emails, blog posts, and so forth.
Or they could be persistent, server based,
where an attacker doesn't need to actively target a user.
Think of infecting a website
and then when a user visits that website.
So a little more detail.
So non-persistent is a specially crafted URL
that is sent in an email, an instant message,
a blog post, and so forth.
Then we have Document Object Model or DOM-based,
and that can be non-persistent
and can be used to hijack sessions.
And then we have persistent,
and that is server-based and can execute on a victim's PC
by visiting an infected site.
So if we look at this in a little more detail.
Right, so here's a cross-site scripting example.
So here up top, you see we have an attacker,
a user's browser, the malicious script, the attacker server,
and then a legitimate server.
So cross-site scripting via email.
Well, the attacker will construct a malicious link
and send that in an email to a user.
He then emails the URL to the victim
and convinces them somehow to click on that link.
Right, so the user sent the email,
contains that malicious link,
and they're convinced via some method to click on it.
Once they do, they requests the page
from the legitimate web server.
So that URL is sent to the legitimate site
along with a malicious code
that then executes in the victim's web browser.
From there, the webpage is returned
with that malicious script,
and then the attacker could then issue additional requests
to that legitimate server,
post data to that server, and so forth.
They can run some type of script
and do other things in the context of the user,
whether that might be stealing credentials,
that might be authorizing a payment,
and that might be something that the user's unaware of,
such as an unauthorized request.
So the unauthorized request is then issued
on the user's behalf without them knowing it, right?
The user's unaware of that request.
Again, it could be making a payment,
it could be purchasing something,
it could be stealing credentials,
it could be stealing cryptocurrency
or banking information, and so forth.