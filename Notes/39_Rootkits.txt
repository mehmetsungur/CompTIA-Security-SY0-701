Next, we have a rootkit.
And, shocker, it's also malicious code
that installs itself at the OS
or the kernel level to avoid detection.
So rootkits are especially problematic
because they install typically before antivirus
or any type of detection software kicks in.
So once a rootkit is installed,
unless you have the proper software
or know what you're doing,
they're typically very hard to remove.
Now, just to elaborate a bit,
there are a number of types of rootkits.
So let's go through some of these.
So starting off, we have kernel-based.
So a kernel-based rootkit
is basically modifying the operating system's kernel,
and it basically gives them
significant control over the system.
Next, we have user-mode rootkits,
and these rootkits operate at the application layer,
and they may replace regular application binaries
with malicious versions
or modify the behavior of existing applications
to achieve their objectives.
And then we have bootkits.
So these are rootkits
that infect the master boot record, or the MBR,
or boot loader,
allowing them to initiate before the operating system.
Again, this makes it very difficult to detect.
Then we have firmware rootkits,
in that they infect the firmware
of hardware components such as the BIOS.
Next, we have virtualized rootkits.
And these rootkits install a hypervisor
which controls the main operating system,
effectively virtualizing it
and allowing the rootkit to operate at a level
even beneath the hypervisor-based system.
And then, lastly, we have memory-based.
And memory-based rootkits reside in RAM,
so they don't persist after a system reboot,
making them very hard to detect
but also easier to remove.
So when we're talking about what actually does a rootkit do,
some of the key functions.
So we have privilege escalations.
So they're trying to get in at a higher level,
whether it's admin or root, superuser,
and doing some type of malicious activity.
We also have concealment.
So one of the main functions of a rootkit
is to hide its presence
and the presence of other malware activity.
So it may hide files, it may hide processes,
and, of course, network activities.
And then we have backdoor access.
So rootkits, they'll often create what's called a backdoor
into a computer system,
basically bypassing regular authentication,
and they try to do persistence there.
So they'll install a back door
very surreptitiously, in a very stealthy fashion
to try and hide it
so they can get back in whenever they need to,
even if the rootkit itself was disabled.
And then also information harvesting.
So many rootkits have capabilities to log keystrokes,
we talked about that before,
capture screenshots
or collect other types of sensitive information,
and then email or somehow exfiltrate
that data from the system.
And then command and control.
So we talked about that before as well.
So advanced rootkits may include functionality
to communicate with external servers for receiving commands
or, as I mentioned, exfiltrating data.
So having said all of that, as you can imagine,
rootkits are extremely dangerous,
probably one of the most dangerous types of malware.
So there are some things we can do though to remediate,
and that includes behavioral analysis.
So we basically want to make sure
we understand what's normal
so we can understand what's not normal,
and there are certain tools out there
that can help with that.
We also have integrity checking.
So that compares system files and behaviors
against known good baselines,
again, to spot irregularities.
Signature-based detection,
less effective against sophisticated rootkits
but can still identify known rootkits
based upon specific characteristics or patterns.
So if we're talking about things that are known rootkits,
well, the ones that are unknown are referred to as a what?
Well, they would be called a zero-day.
And then we have offline scanning,
booting from a clean external source
like a CD or a live CD or a USB.
So we basically would boot to that disc
or that program,
not actually boot into the computer as we would normally do.
We would actually boot to a live CD or a USB
and then scan the system.
That way we can get the scanning done
before anything else loads.
Then we have hardware-based security.
So utilizing hardware features
like an HSM module or a TPM module,
and those types of things can protect
against unauthorized code execution
and also can help in preventing rootkit infections.
And then last but not least,
we wanna make sure we do regular updates.
This is kind of a no-brainer,
and this is what we should do anyway,
but it can be especially helpful when preventing rootkits.
So keeping the system and security software up-to-date
can defend against the known vulnerabilities
that rootkits may exploit.
Some of the rootkits that are floating around right now
and that you should be aware of
and I encourage you to dig in a little deeper here
and do your own research
just so you have an understanding
of how they operate and so forth.
But I'll just list them here,
and you can dig in at your leisure.
The first one is CosmicStrand,
and this is a UEFI rootkit that infects the boot process
by patching the firmware image of motherboards.
And like I said, these things kick in
before antivirus and other things have a chance
to actually load up and do anything.
Next, we have SeroXen.
I think I'm pronouncing that right.
It's a remote-access Trojan malware,
and this malware is increasingly used to target gamers.
Next, we have the FudModule rootkit,
and this was used by Lazarus hackers
to abuse a Dell driver bug.
And then last on our list is the Black Cat ransomware.
And these attacks use malicious Windows kernel drivers.
So all different types of rootkits
designed with different targets in mind,
but all basically doing the same thing.
They will load at the root level
or basically before anything else has a chance to kick in,
and they're very, very difficult
to actually remove once installed.