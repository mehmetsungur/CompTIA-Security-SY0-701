Okay, so let's discuss some actual methods
to secure data.
So when we're talking about geographic restrictions,
so geographic restrictions involve limiting access to data
or resources based upon the location of users
or the devices.
So that's often used to comply with data sovereignty laws
or to prevent authorized access from specific regions
or specific countries.
Next is encryption.
So encryption is the process as we know of converting data
into coded or encrypted format.
We've talked about encryption at length previously,
but we basically wanna prevent unauthorized access.
So it ensures that even if data is intercepted,
it remains unreadable
without the appropriate decryption key.
And then when it comes to hashing,
as we know, hashing involves converting data,
usually a variable length
into a fixed length string of characters.
It's called a hash value.
So that hashing is used to verify data integrity
and then also securely store passwords.
And by doing this,
it ensures that even a small change in the input of data
produces a significantly different hash value.
And then we can further increase that security
by adding a salt value or a salt to that hash,
which adds additional random information
into that algorithm.
Next is masking.
So data masking involves replacing sensitive information
with fictional or obscure data.
So it's used to protect sensitive data
during non-production activities
like development or testing
while maintaining the data's format.
So that way folks in the lower environments
that need to do testing or development
can actually do it on relatively production-like data,
but without actually having access to that data.
Next is tokenization.
So tokenization, as we know, replaces sensitive data
with a unique token or a reference value.
So the actual data is stored securely
while tokens are used for the transaction.
So this reduces the risk associated
with handling sensitive data directly
since it's not actually passed from one point to another,
just the token is.
Obfuscation, as the name implies,
involves making data intentionally unclear
or difficult to understand.
So it's often used in coding
or software development to protect intellectual property
or sensitive algorithms from reverse engineering.
So out of all these things,
this is probably the least effective, right?
Security by obfuscation
or obscurity is not necessarily the best way to go
as far as being foolproof,
but it certainly makes things more difficult,
and if used in conjunction with other methods
makes it much more difficult to reverse engineer
and actually get access to the underlying data.
Next is segmentation.
So segmentation being the practice of dividing a network
into smaller isolated segments.
Remember, I talked about before,
we walk into a crowded cafeteria and it's very, very noisy.
Well, if we take all those folks
and put them into separate rooms,
maybe four or five different rooms,
the chatter's way down.
It's easier to understand.
It's easier to communicate.
They're also secure from one another
in that they don't eavesdrop
or listen in on other rooms conversations.
So isolated segments help contain the spread
of cyber threats.
It also helps to prevent lateral movement by attackers
within a network.
So if a breach does occur
and someone is able to actually infiltrate into the network,
but they pop into a very isolated segment,
they're not gonna be able to laterally just pivot
and start going throughout the network.
They're gonna be contained to that one area.
And then lastly, permission restrictions.
So permission restrictions
involve controlling access to data
or resources based upon user roles
on privileges or permissions.
So users are granted access only to the data
and the functions necessary for their job,
reducing the risk of unauthorized access
and also data breaches.
Okay, so short and sweet on this module,
as far as disposal is concerned,
protecting through encryption or other methods
basically keeping it safe from prying eyes
and then also critical from protecting the company
from legal troubles, financial implications, and so forth.
So that brings us to the end of the module,
but stick around,
because up next we have resilience
and recovery in security architecture.