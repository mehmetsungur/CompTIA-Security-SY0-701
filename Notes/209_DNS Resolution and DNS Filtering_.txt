So let's talk about DNS resolution,
and just to make sure we're all on the same page,
let's go through a quick primer on DNS.
So here we have a website that's near and dear to my heart.
Good old pluralsight.com,
and you'll notice there's a dot at the end of the website.
So www.pluralsight.com dot.
Well, that is actually the root of the DNS hierarchy.
So it's not typically displayed, but it is implied.
So you'll see in a moment that it directs us to the root
of that DNS hierarchy.
Below that, we have a TLD or a top level domain,
and that consists of those top level domains
like .com, .gov, .edu,
maybe a country denomination, .fr, .uk and so forth.
And then below that we have second level domains.
That's typically a company name like Pluralsight.
In this example, pluralsight.com,
the Pluralsight is the company name.
So that's usually associated with a company or a service.
You could also have a subdomain below that
like blog.pluralsight.com
or learning.pluralsight.com or some other type of subdomain.
So you can host different websites
and services on that same domain
by breaking it down further.
We're not doing that here, but just an FYI.
Below that, we have the host, in this case, it's www,
and that is the actual PC or the group of PCs
that would actually respond to the service
that you're requesting when you type in that URL
or that Uniform Resource Locator.
So let's look at this actually in action.
So here we have a user.
In this case, they're called a resolver,
and we're talking about DNS.
So they want to get to a website.
In this case, they wanna get out to pluralsight.com.
So let's assume that they're home, but we'll talk about it
they're in a corporate environment as well.
It's very much the same thing.
So they type in www.pluralsight.com,
they'll check their local machine
to see if they've done it before.
Have they requested that before and got it resolved?
If they have, they just use their local cache.
If not, let's assume they did not do that.
So they send the query to their local ISP,
the ISP's DNS server.
They'll do the same thing and check their cache.
Has someone else requested that?
Let's assume they did not.
If they did, they'd send that information
back right away to the user.
Let's assume they did not in this case.
So then what happens is the ISP DNS
on behalf of the user will forward that query
to the root of the DNS hierarchy.
And you can think of it as a giant
phone book of phone books.
So no one phone book would have every single phone number
of everyone in the entire US
or the entire world for that matter.
So what happens is, you can think of it as a phone book
that has the phone numbers of all the state phone books,
the state phone books have the phone numbers
of all the county phone books and so on and so forth.
So you kind of weave your way through that hierarchy
down to the local level.
So what happens, the root DNS servers say,
I don't know the address for www.pluralsight,
but I know the address for the .com domains,
so let's go check there.
It forwards it back.
The ISP then reaches out to the .com DNS servers.
Same thing happens.
I don't know ww.pluralsight,
but I do have the IP addresses for the DNS servers
that are authoritative for the pluralsight.com domain.
Go check there.
So it sends it back, I then reach out to pluralsight.com,
the second level domain.
I query it again and say, hey, do you have the IP address
for www.pluralsight.com?
And it says, yes, I do, hands me back that IP address,
which I then send back to the user.
They reach out to the website.
I don't know how they did it, but they came across
a phenomenal instructor teaching Security+,
they learned a lot.
They upskilled, improved their career,
and their life has never been the same.
(Instructor chuckling)
But seriously, let's put this in the context
of DNS filtering,
which is really the point that I'm trying to make here.
So DNS filtering follows much the same pattern,
but we now have some granularity
and control over what the user can actually resolve.
So here we have the user, the resolver,
same thing, they're trying to get out to a website.
So they go through that same process
checking locally, no, I don't have it.
They reach out to their ISP.
In this case, let's assume it's a corporate setting.
So instead of an ISP DNS, let's make it a corporate DNS.
So the corporate DNS has DNS filtering in place,
and that basically says, okay,
a server's gonna check the requested domain
against a list of blocked or allowed websites.
So the DNS administrator for the company,
for your organization, can import a massive list of sites
that are allowed and sites that are blocked.
So things that may contain malware, ransomware,
they may have a bad reputation,
or they may contain things that are harmful or destructive
or not safe for work content.
It's gonna be a little bit different for each company
and what they allow and what they tolerate.
But they can bring that block list in
and filter it at the DNS level.
Once on the block list, whether again, malware, phishing,
inappropriate content, et cetera, et cetera,
the DNS server does not return the correct IP address
like we talked about in the previous example.
What they'll do is typically return the IP address
of a block page that informs the user
that the site can't be accessed,
and it will tell them why, whether it's content, category,
malware, phishing, so on and so forth.
So that gives the administrator a lot of granularity
and control over what sites can be visited
and helps protect the environment,
helps protect the organization from inappropriate content,
from malware, phishing, viruses, and so forth.