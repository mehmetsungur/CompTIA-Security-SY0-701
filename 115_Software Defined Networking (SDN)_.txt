Okay, next let's talk
about Software-Defined Networking.
So Software-Defined Networking, otherwise known as SDN
is an approach to networking
that employs software based controllers,
or application programming interfaces or APIs
to basically decouple the management plane
from the data plane.
So in other words, the intelligence is not necessarily built
into the machine or to the router,
versus having that functionality hardwired or hardcoded
into the appliance.
So this places intelligence higher up the stack,
and it automates or allows for the automating
of most functions, and it also allows for a holistic view
of the network and programmatic tuning based on activity,
on workloads and so forth.
So it adds a lot more intelligence.
It allows an operator to see the entire network at a glance
instead of looking at each individual machine.
And you can also control all of the routers,
and the switches in the environment
from a single pane of glass.
So in essence, the routers and switches become dumb devices
with intelligence handled by a centralized controller suite
versus each individual device.
So as an example, in a traditional sense,
an operator or an administrator would have to go around
to each individual router and switch,
and they could access that remotely over the network,
but they would have to log into each individual switch
one by one throughout the network.
And the routers
and switches didn't necessarily have visibility
to each other.
They were all more or less standalone devices
on the network.
Using a Software-Defined Networking strategy,
we can push out patches, updates, and so forth
to the entire environment at once
or programmatically maybe doing a few at a time,
but allows us to dramatically speed up management
of the network, and it also allows the individual devices
to communicate with each other more efficiently,
so they have a better view of the network
and how traffic is proceeding.