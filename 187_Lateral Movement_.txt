Okay, so I mentioned before
escalation of privilege.
So that's the primary goal when accessing a host.
So administrator or root access to that host
gives us the ability to install persistence mechanisms,
back doors, run scripts, and so forth.
So it also allows us to scan for additional exploits,
vulnerabilities, and misconfigurations.
So once we have admin or root access,
it gives us the ability to actually act upon the things
that we find so we can exploit those vulnerabilities,
we can start fingerprinting the rest of the network,
the operating systems and so forth.
So as far as the various methods of escalation,
there are many, many things that we can do.
So I'll list four here, but there are obviously
a ton of different ways to do it
and it varies from person to person.
Everyone has their favorite toolset,
their favorite process, and so forth.
And it really depends upon what's existing
in that target environment, what types of operating systems,
the levels, the patches, what's already been installed,
certain intrusion detection systems and so forth.
So to give you four options, we can hack the local account,
whether that's done by dumping the local SAM
or the security accounts manager, some type of brute force,
maybe a password sniffing, you know,
grabbing the hash off the network.
There are various ways to hack that local account.
We can also exploit a vulnerability.
Maybe that specific machine isn't patched,
maybe there's a glaring hole.
We could run some script against that host
and escalate privileges, whether it's a buffer overflow
or some type of scripting attack
that allows us to exploit that vulnerability.
We can also use brute force tools.
So again, we could dump the SAM, like I said,
we could run password cracking tools against it
and try to go through some rainbow tables
or birthday attacks and go through all the things
that we've talked about to brute force that password.
And then lastly, we could use social engineering.
So (chuckling) in that case,
we really allow someone else to do it for us.
So if we're good enough and we're able to get
enough information that we appear like we know
what we're talking about, that we're part of the company,
or that maybe we're a long-term vendor
who already has access, if we talk to the right person
and we use our social engineering skills,
we might be able to get them to open up an account for us,
or perhaps change a password
or give us information that we need
to then hack that local account and then give us
the ability to escalate privileges.
So obviously it depends upon the environment itself,
the skillset of the hacker, and of course the tools at hand.
So all of that brings us to the goal of persistence.
So installing back doors
or methods to maintain access to a host or to a network.
So basically once we get in, we wanna put in another door
or another way in so that if our initial one, right,
if we come through the front door and they say,
"Uh-oh, I see where they came in," and they lock that door,
well, we have a back door we can now come in
and still maintain connectivity or persistence on that host.
So once we're in and we've actually gained access
to the system within that network, we're going to pivot.
And pivoting is a technique that allows
lateral movement from a compromised host.
So gaining a foothold is a key term right here
that allows us to get in and then escalate privileges.
So once that foothold is gained,
the compromised target system is then leveraged
to compromise other normally inaccessible systems.
So we're gonna jump from network to network, potentially.
Now there are many tools that can help us do this.
Metasploit is a great one.
I recommend if you're not already familiar with Metasploit,
you look at some of our other courses
and do some due diligence on your own
to familiarize yourself with that tool.
It's a great tool for penetration testing
and is also used a lot by bad actors.
So it's really a great product
and they have a lot of tools built in
to automate much of that process.
So just to demonstrate in a bit more detail.
So here we are as the hacker, the bad actor,
or even a penetration tester.
So we're looking to access a system.
It could be a web-facing system
or whatever we use to gain our initial contact.
We're gonna run Metasploit, as I mentioned,
or whatever application or toolset that we need.
We're gonna run some scripts against that server.
We're gonna escalate privileges from there.
We're able to move laterally at that point.
We might move to another system
and see what we can see,
see what information might be there, anything of interest,
maybe active directory, in this example.
From there, we'll move on to other systems
as you start scanning through the network
and gaining lateral movement,
and then run some additional scripts to gain persistence,
escalate privileges and so forth.
And you might come across one and say,
"Hey, this system is actually dual homed.
So it's attached to two different networks,
one of which I normally would not have access to."
So the initial machine that I contacted
or breached didn't have access to that network.
But as you move laterally, in this example,
here's one that's dual homed, meaning it's connected
to two different networks.
So that's going to allow me to access network A,
but also allow me to access network B.
So in the example, network A might be on the 172.16 range,
whereas network B might be on the 10 range.
So by running those scripts on that machine
and escalating privileges,
I'm now able to access both networks
and you can see how it goes from there.
So you're able to then really go throughout
the entire network and maybe other ones as well
that you wouldn't initially have access to.
So as you do your reconnaissance
and you move from machine to machine,
you can really start to map out the network
and identify bits and pieces of the network
where some really valuable pieces of information may lie,
where security deficiencies exist and so forth.
And then of course, as a penetration tester,
we're documenting this entire thing
as they go along through the process.
So we can then report back to leadership
or to the folks that hired us, if we're a contractor,
and show them where they need to remediate those issues.
So that then brings us to the cleanup process.
So we wanna remove traces of the penetration test,
and that really entails removing files,
scripts, or any artifacts.
We wanna close any openings or vulnerabilities
that were found during that process
and basically revert any changes.
We wanna leave the system in the exact same state
that it was before the pen test took place.
And then we wanna report our findings,
and that would typically include an executive summary,
technical findings, a risk assessment,
and then any remediation recommendations.
So as I said, the overall goal
was to definitely leave the system in the same condition
that it was prior to the test taking place.